AWSTemplateFormatVersion: 2010-09-09
Description: Part 1 - Build a webapp stack with CloudFormation

Parameters:
  EnvironmentType:
    Description: "Specify the Environment type of the stack."
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
  AmiID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: "The ID of the AMI."
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  # KeyPairName:
  #   Type: String
  #   Description: The name of an existing Amazon EC2 key pair in this region to use to SSH into the Amazon EC2 instances.
  IamRole:
    Type: String
    Description: Pass the Iam role that should be used for instance.
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC to use for your resources.
  Subnet:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select the subnet to use for your resources

Mappings:
  EnvironmentToInstanceType:
    dev:
      InstanceType: t2.nano
    test:
      InstanceType: t2.micro
    prod:
      InstanceType: t2.small

Resources:
  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiID
      InstanceType:
        !FindInMap [
          EnvironmentToInstanceType,
          !Ref EnvironmentType,
          InstanceType,
        ]
      # KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      IamInstanceProfile: !Ref IamRole
      Tags:
        - Key: Name
          Value: Web
      UserData:
        Fn::Base64: |
          #cloud-boothook
          #!/bin/bash
          yum update -y
          yum install -y httpd.x86_64
          systemctl start httpd.service
          systemctl enable httpd.service
          echo “Hello World from $(hostname -f)” > /var/www/html/index.html

  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["-", [webapp-security-group, !Ref EnvironmentType]]
      VpcId: !Ref Vpc
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  WebsiteURL:
    Value: !Join ["", ["http://", !GetAtt WebAppInstance.PublicIp]]
    Description: WebApp URL
